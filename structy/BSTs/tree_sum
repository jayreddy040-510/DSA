from collections import deque
class Node:
  def __init__(self, val):
    self.val = val
    self.left = None
    self.right = None

def tree_sum_dfs(root):
  if root is None:
      return 0
  
  left = tree_sum_dfs(root.left)
  right = tree_sum_dfs(root.right)
  return (root.val + left + right)

def tree_sum_bfs(root):
    if root is None:
        return 0
    sum: int = 0
    q = deque([root])
    while q:
        curr = q.popleft()
        sum += curr.val
        if curr.left:
            q.append(curr.left)
        if curr.right:
            q.append(curr.right)
    return sum





a = Node(3)
b = Node(11)
c = Node(4)
d = Node(4)
e = Node(-2)
f = Node(1)

a.left = b
a.right = c
b.left = d
b.right = e
c.right = f

print(tree_sum_bfs(a))